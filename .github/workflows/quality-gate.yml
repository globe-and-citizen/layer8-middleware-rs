name: Quality Gate

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  ## Issue: <https://github.com/cloudflare/pingora/issues/552>
  ## `cargo-audit` fails with the following error:
  ## Crate:     protobuf
  ## Version:   2.28.0
  ## Title:     Crash due to uncontrolled recursion in protobuf crate
  ## Date:      2024-12-12
  ## ID:        RUSTSEC-2024-0437
  ## URL:       https://rustsec.org/advisories/RUSTSEC-2024-0437
  ## Solution:  Upgrade to >=3.7.2
  ## Dependency tree:
  ## protobuf 2.28.0
  ## └── prometheus 0.13.4
  ##     └── pingora-core 0.4.0
  ##         ├── reverse-proxy 0.1.0
  ##         │   └── cli 0.1.24
  ##         ├── pingora-proxy 0.4.0
  ##         │   └── reverse-proxy 0.1.0
  ##         ├── pingora-cache 0.4.0
  ##         │   └── pingora-proxy 0.4.0
  ##         └── pingora 0.4.0
  ##             └── reverse-proxy 0.1.0

  # audit:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Sources
  #       uses: actions/checkout@v3
  #     - name: Install Toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         default: true
  #     - uses: Swatinem/rust-cache@v1
  #     - name: Install Audit
  #       run: cargo install cargo-audit
  #     - name: Run Audit
  #       run: |
  #         cargo audit

  lint:
    name: lint-and-format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v1
      - name: Test Format
        run: |
          cargo fmt --all --check

  cargo-doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: run cargo doc
        run: RUSTDOCFLAGS="-D warnings" cargo doc

  test:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        toolchain: [stable]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: "${{ matrix.toolchain }}"
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          default: true
      - name: Install npm
        uses: actions/setup-node@v2
        with:
          node-version: "22"

      - uses: Swatinem/rust-cache@v1
      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown

      - name: Check with with features
        run: cargo check --verbose --all-features
      - name: Run tests with features
        run: |
          # If macOs install llvm with brew
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install llvm
            export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
            export CC=/opt/homebrew/opt/llvm/bin/clang
            export AR=/opt/homebrew/opt/llvm/bin/llvm-ar
          fi
          cargo install wasm-pack
          # Side effect to fail if node is not installed
          which node 
          cd middleware-wasm && wasm-pack test --node --all-features
